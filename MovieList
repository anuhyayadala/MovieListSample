import Foundation

struct Movie: Codable  {
   let title : String
   let year : String
 let imdbID: String
   let type : String
   let poster : String
}   


struct MoviesList : Codable{
    let movies : [Movie]    
}

class ViewController: UIViewController, UICollectionViewDataSource, UICollectionViewDelegate {
   
   var movies: [Movie] = []
   var searchText : String?
  
   @IBOutlet weak var searchfield: UITextField!
    @IBOutlet weak var collectionView: UIcollectionView!

    @IBAction func searchtextField(_sender: UITextField) {
      If let title = sender.text {
             self.searchText = title
        }

    override func viewDidLoad() {
         super.viewDidload()

            let urlString  = “http://www.omdbapi.com/?apikey=b9bd48a6&s=Marvel&type=movie”
             if let url = URL(string : urlString) {
            if let data = try? Data(contentOf: url) { 
             Parse(json : data)
    }

    }
}

func Parse(json: Data) {
let decoder = JSONDecoder()
If let jsonMovies = try? Decoder.decode(Movieslist.self , from: json) {
 listOfMovies = jsonMovies.movies
}
}
func collectionView(_ collectionView: UICollectionView, numberOfItemsInSection section: Int) -> Int          {
        return listOfMovies.count
 }

func collectionView(_ collectionView: UICollectionView, cellForItemAt indexPath: IndexPath) -> UICollectionViewCell {
        
        let cell = collectionView.dequeueReusableCell(withReuseIdentifier: reuseIdentifier, for: indexPath as IndexPath) as! ViewController
        
                let movie = listOfMovies[indexPath.row]
           cell.searchfield.text = movie.title
  return cell
    }









